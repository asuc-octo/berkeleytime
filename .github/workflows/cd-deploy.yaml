name: SSH and Deploy

on:
  workflow_call:
    inputs:
      environment:
        description: "Github action environment to deploy within"
        required: true
        type: string
      name:
        description: "Helm chart installation name"
        required: true
        type: string
      version:
        description: "Helm chart version"
        required: true
        type: string
      host:
        description: "Hostname for the deployment"
        required: true
        type: string
      values:
        description: "Helm chart override values (yaml)"
        required: true
        type: string

jobs:
  deploy:
    name: SSH and Deploy
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: https://${{ inputs.host }}

    steps:
      - name: SSH and Helm Install
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e  # Exit immediately if a command fails

            # Check if helm chart exists
            helm status ${{ inputs.name }} &>/dev/null && status=true || status=false

            # Upgrade helm chart, or install if not exists
            helm upgrade ${{ inputs.name }} oci://registry-1.docker.io/octoberkeleytime/bt-app \
              --install \
              --version=${{ inputs.version }} \
              --namespace=bt \
              --values <(echo "${{ inputs.values }}")

            # Restart deployment if helm chart existed
            if [ $status = true ]; then
              kubectl rollout restart deployment ${{ inputs.name }}-backend
              kubectl rollout restart deployment ${{ inputs.name }}-frontend
            fi

            # Check container status
            kubectl rollout status --timeout=180s deployment ${{ inputs.name }}-backend
            kubectl rollout status --timeout=180s deployment ${{ inputs.name }}-frontend

      - name: Output Summary
        run: |
          echo "# :white_check_mark: Deployment available at [${{ inputs.host }}](https://${{ inputs.host }})." >> $GITHUB_STEP_SUMMARY
