name: Build and Push Images and Charts

on:
  workflow_call:
    inputs:
      image_tag:
        description: "Image build tag"
        required: true
        type: string
      chart_ver:
        description: "Chart build tag"
        required: true
        type: string

jobs:
  build-push-image:
    name: Build and Push Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [backend, frontend, datapuller]

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          file: ./apps/${{ matrix.image }}/Dockerfile
          target: ${{ matrix.image }}-prod
          tags: ${{ secrets.DOCKER_USERNAME }}/bt-${{ matrix.image }}:${{ inputs.image_tag }}
          cache-from: |
            type=registry,ref=${{ secrets.DOCKER_USERNAME }}/bt-${{ matrix.image }}:${{ inputs.image_tag }}-cache
            type=registry,ref=${{ secrets.DOCKER_USERNAME }}/bt-${{ matrix.image }}:prod-cache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/bt-${{ matrix.image }}:${{ inputs.image_tag }}-cache,mode=max
          platforms: linux/amd64
          push: true

  build-push-chart:
    name: Build and Push Helm Chart
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart: [app, base]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: infra

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Helm Chart
        run: |
          cd ./infra
          helm registry login registry-1.docker.io -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          helm package ${{ matrix.chart }} --version ${{ inputs.chart_ver }} --dependency-update
          helm push bt-${{ matrix.chart }}-${{ inputs.chart_ver }}.tgz oci://registry-1.docker.io/${{ secrets.DOCKER_USERNAME }}
