version: '3.7'
services:
  backend:
    build:
      context: ../berkeleytime
    command: ["0.0.0.0:8000"]
    volumes:
     - ../berkeleytime:/berkeleytime
     - ./google-sa.json:/google-sa.json
    environment:
     - "PYTHONUNBUFFERED=1"
     - "GOOGLE_CLIENT_ID=***REMOVED***"
     - "GOOGLE_CLIENT_SECRET=***REMOVED***"
     - "GOOGLE_TOKEN_URI=https://accounts.google.com/o/oauth2/token"
     - "ENVIRONMENT_NAME=LOCALHOST"
     - "DATABASE_URL=postgres://u7hgbqfb5rov7s:***REMOVED***@35.236.65.95/bt_main"
     - "SIS_CLASS_APP_ID=***REMOVED***"
     - "SIS_CLASS_APP_KEY=***REMOVED***"
     - "SIS_COURSE_APP_ID=***REMOVED***"
     - "SIS_COURSE_APP_KEY=***REMOVED***"
     - "GOOGLE_APPLICATION_CREDENTIALS=/google-sa.json"
     - "GOOGLE_EMAIL=octo.berkeleytime@asuc.org"
     - "GOOGLE_PASS=***REMOVED***"
    depends_on:
     - redis
  frontend:
    build:
      context: ../frontend
      target: base
    volumes:
      - ../frontend/src:/frontend/src
      - ../frontend/public:/frontend/public
    command: ["npm", "start"]
    stdin_open: true # https://github.com/facebook/create-react-app/issues/8688
  redis:
    image: redis:alpine
  nginx:
    image: nginx
    volumes:
     - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
     - "8080:8080"
    depends_on:
     - backend
     - frontend
  search:
    build: ../search
    ports:
      - "5000:5000"
    volumes:
      - .:/code
    environment:
      FLASK_ENV: development
    depends_on:
      - elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    ports:
      - '9200:9200'
    volumes:
      - es_data:/usr/share/elasticsearch/data
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=docker-cluster
      - node.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: curl --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
volumes:
  es_data:
    driver: local
