/**
 * This function converts a mongo schema to a diff format
 * i.e. {a: String, b: Number} -> {a: [String], b: [Number]}
 *
 * Caution: This funciton is generated by copilot
 * Currently, this function only supports String, Number, Boolean and Date types for now,
 * you can add Construction types on your own below
 *
 * @param obj The schema object that you want to convert to a diff object
 * @returns the schema object with the innermost keys converted to a list of the same type
 */
export function schemaToDiff<T>(obj: T): NestedObjectToList<T> {
  const obj1 = obj as any;
  return Object.keys(obj1).reduce((acc, key) => {
    if (typeof obj1[key] === "object") {
      return {
        ...acc,
        [key]: schemaToDiff(obj1[key]),
      };
    }
    return {
      ...acc,
      [key]: [obj1[key]],
    };
  }, {} as NestedObjectToList<T>);
}

type NestedObjectToList<T> = {
  [K in keyof T]: T[K] extends
    | StringConstructor
    | NumberConstructor
    | BooleanConstructor
    | DateConstructor
    ? [T[K]]
    : T[K] extends object
    ? NestedObjectToList<T[K]>
    : T[K];
};
