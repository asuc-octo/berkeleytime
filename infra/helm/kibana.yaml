# TODO: Access control in Kibana?
# https://github.com/floragunncom/search-guard

# Template: https://github.com/elastic/helm-charts/blob/480a19413024cab7f9ea96e2d40078bc2247ce2d/kibana/values.yaml
# Example scripted field nginx.ip_agent which combines 2 existing fields
#   [ doc['nginx.client_ip.keyword']+''+doc['nginx.user_agent.keyword'] ]
# Kibana Dev Tools example to verify:
#   GET /k8s-ingress-nginx-*/_search?pretty=true
#   {
#     "size": 55,
#     "aggs": {
#       "ip_agent": {
#         "composite": {
#           "sources": [
#             { "ip": { "terms": { "field": "nginx.client_ip.keyword" } } },
#             { "agent": { "terms": { "field": "nginx.user_agent.keyword" } } }
#           ]
#         }
#       }
#     }
#   }
# Example Kibana query DSL that uses wildcards in searches
#    {"wildcard":{"kubernetes.pod.name":"berkeleytime*"}}
kibanaConfig:
  kibana.yml: |
    server:
      basePath: /kibana
      rewriteBasePath: true
    telemetry:
      enabled: false
    # https://stackoverflow.com/questions/56048741/how-to-hide-menu-items-in-kibana
    xpack:
      infra:
        sources:
          default:
            logAlias: k8s*
            metricAlias: metricbeat*
      reporting:
        encryptionKey: ${ENCRYPTION_KEY_KIBANA}
      security:
        encryptionKey: ${ENCRYPTION_KEY_KIBANA}
      encryptedSavedObjects:
        encryptionKey: ${ENCRYPTION_KEY_KIBANA}
elasticsearchHosts: http://bt-elasticsearch:9200
healthCheckPath: /kibana/api/status
replicas: 1
lifecycle:
  postStart:
    exec:
      command:
        - /bin/sh
        - -c
        - |
          while [ "$(curl -s -o /dev/null -w '%{http_code}\n' $KIBANA/app/kibana)" != "200" ]
          do
            echo `date +"%Y-%m-%d %H:%M:%S"` ...waiting for Kibana to be ready
            sleep 1
          done
          add_index_pattern() {
            curl -d "@-" -X POST -H "Content-Type: application/json" -H "kbn-xsrf: -" "$KIBANA/api/saved_objects/index-pattern/$1" << EOF
            {
              "attributes": {
                "title": "$2",
                "timeFieldName": "$3"
              }
            }
          EOF
          }
          set_default_index_pattern() {
            curl -d "@-" -X POST -H "Content-Type: application/json" -H "kbn-xsrf: -" "$KIBANA/api/kibana/settings" << EOF
            {
              "changes": {
                "defaultIndex": "$1"
              }
            }
          EOF
          }

          # We add "|| true" because POST = can run only once, and PUT = doesn't work because if resource doesn't exist, it fails
          add_index_pattern k8s-index-pattern-id k8s-* @timestamp || true
          add_index_pattern k8s-ingress-nginx-index-pattern-id k8s-ingress-nginx* @timestamp || true
          add_index_pattern gitlab-index-pattern-id gitlab-* || true
          add_index_pattern metricbeat-index-pattern-id metricbeat* @timestamp || true
          set_default_index_pattern k8s-index-pattern-id
extraEnvs:
  - name: ENCRYPTION_KEY_KIBANA
    valueFrom:
      secretKeyRef:
        name: general-secrets
        key: ENCRYPTION_KEY_KIBANA
  - name: KIBANA
    value: http://localhost:5601/kibana
#   - name: ELASTICSEARCH_USERNAME
#     valueFrom:
#       secretKeyRef:
#         name: general-secrets
#         key: USERNAME_ELASTICSEARCH_USER_KIBANA_SYSTEM
#   - name: ELASTICSEARCH_PASSWORD
#     valueFrom:
#       secretKeyRef:
#         name: general-secrets
#         key: PASSWORD_ELASTICSEARCH_USER_KIBANA_SYSTEM
#
# resources:
#   requests:
#     cpu: "200m" # Default: 1000m
#     memory: "1G" # Default: 2Gi
#   limits:
#     cpu: "200m" # Default: 1000m
#     memory: "1G" # Default: 2Gi
