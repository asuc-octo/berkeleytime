# Values template: https://github.com/elastic/helm-charts/blob/e4ab721d108439a23187dc4da674ac20e6ede056/logstash/values.yaml
# co.elastic.logs.nginx/module: nginx
# co.elastic.logs/fileset.stdout: access
replicas: 1

# Allows you to add any config files in /usr/share/logstash/config/
# such as logstash.yml and log4j2.properties
#
# Note that when overriding logstash.yml, `http.host: 0.0.0.0` should always be included
# to make default probes work.
logstashConfig:
  logstash.yml: |
    xpack:
      monitoring:
        enabled: true
        elasticsearch:
          hosts:
            - http://bt-elasticsearch-primary:9200
    http.host: "0.0.0.0"

# Allows you to add any pipeline files in /usr/share/logstash/pipeline/
### ***warn*** there is a hardcoded logstash.conf in the image, override it first
logstashPipeline:
  # How to Automate Elasticsearch Index Creation
  # https://cloudhero.io/automate-elasticsearch-index-creation
  logstash.conf: |
    input {
      beats {
        port => 5044
        host => "0.0.0.0"
      }
    }
    filter {
      if ("" in [kubernetes][labels][app]) and ("" in [kubernetes][labels][environment]) {
        mutate { add_field => { "[@metadata][target_index]" => "k8s-%{[kubernetes][labels][app]}-%{[kubernetes][labels][environment]}-%{[kubernetes][container][name]}-%{+yyyy.MM.dd}" } }
      }
      else {
        mutate { add_field => { "[@metadata][target_index]" => "k8s-%{[kubernetes][namespace]}-%{+yyyy.MM.dd}" } }
      }
      if [event][module] == "nginx" {
        if [fileset][name] == "access" {
          grok {
            match => { "message" => ["%{IPORHOST:[nginx][access][remote_ip]} - %{DATA:[nginx][access][user_name]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} \"%{DATA:[nginx][access][referrer]}\" \"%{DATA:[nginx][access][agent]}\""] }
            remove_field => "message"
          }
          mutate {
            add_field => { "read_timestamp" => "%{@timestamp}" }
          }
          date {
            match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
            remove_field => "[nginx][access][time]"
          }
          useragent {
            source => "[nginx][access][agent]"
            target => "[nginx][access][user_agent]"
            remove_field => "[nginx][access][agent]"
          }
          geoip {
            source => "[nginx][access][remote_ip]"
            target => "[nginx][access][geoip]"
          }
        }
      }
    }
    output {
      elasticsearch {
        hosts => "http://bt-elasticsearch-primary:9200"
        manage_template => false
        action => "create"
        ilm_enabled => false
        index => "%{[@metadata][target_index]}"
        # user => "${ELASTICSEARCH_USERNAME}"
        # password => "${ELASTICSEARCH_PASSWORD}"
      }
    }
