apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bt-ingress-primary-frontend
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.k8s.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/server-snippet: |-
      server_name berkeleytime.com ~^www\.;
      location "^/" {
        rewrite ^ocf.berkeleytime.com$request_uri permanent;
      }
      if ($host ~* www\.(.*)) {
        set $host_without_www $1;
        rewrite ^(.*)$ $scheme://$host_without_www$1 permanent;
      }
spec:
  tls:
    - hosts:
        - berkeleytime.com
        - "*.berkeleytime.com"
      secretName: bt-tls
  rules:
    - host: berkeleytime.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bt-frontend-svc-prod
                port:
                  number: 3000
          - path: /git
            pathType: Prefix
            backend:
              service:
                name: bt-gitlab
                port:
                  number: 80
    - host: staging.berkeleytime.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bt-frontend-svc-staging
                port:
                  number: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bt-ingress-primary-backend
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.k8s.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  tls:
    - hosts:
        - berkeleytime.com
        - "*.berkeleytime.com"
      secretName: bt-tls
  rules:
    - host: berkeleytime.com
      http:
        paths:
          - path: /api/?(.*)
            pathType: Prefix
            backend:
              service:
                name: bt-backend-svc-staging
                port:
                  number: 5000
    - host: staging.berkeleytime.com
      http:
        paths:
          - path: /api/?(.*)
            pathType: Prefix
            backend:
              service:
                name: bt-backend-svc-staging
                port:
                  number: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bt-ingress-primary-protected-routes
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.k8s.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: ingress-nginx-bt-protected-routes
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - Login with credentials"
spec:
  tls:
    - hosts:
        - berkeleytime.com
        - "*.berkeleytime.com"
      secretName: bt-tls
  rules:
    - host: berkeleytime.com
      http:
        paths:
          - path: /kibana
            pathType: Prefix
            backend:
              service:
                name: bt-kibana-kibana
                port:
                  number: 5601
