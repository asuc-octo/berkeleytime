# https://www.deepnetwork.com/blog/2020/03/13/password-protected-efk-stack-on-k8s.html
kind: Service
apiVersion: v1
metadata:
  name: bt-elasticsearch
  namespace: default
  labels:
    component: bt-elasticsearch
spec:
  type: ClusterIP
  selector:
    component: bt-elasticsearch
  ports:
    - port: 9200
      name: rest
    - port: 9300
      name: inter-node

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bt-elasticsearch
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30G

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: bt-elasticsearch
  name: bt-elasticsearch
  namespace: default
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      component: bt-elasticsearch
  template:
    metadata:
      labels:
        component: bt-elasticsearch
    spec:
      volumes:
        - name: bt-elasticsearch-config
          configMap:
            name: bt-elasticsearch-config
        - name: bt-elasticsearch-pvc
          persistentVolumeClaim:
            claimName: bt-elasticsearch
      containers:
        - name: bt-elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
          ports:
            - containerPort: 9200
              name: rest
              protocol: TCP
            - containerPort: 9300
              name: inter-node
              protocol: TCP
          volumeMounts:
            - name: bt-elasticsearch-config
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
            - name: bt-elasticsearch-pvc
              mountPath: /usr/share/elasticsearch/data
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    while [[ ! "$(curl -s $HOSTNAME:9200/_cat/health)" =~ "green" ]] && [[ ! "$(curl -s $HOSTNAME:9200/_cat/health)" =~ "yellow" ]]
                    do
                      echo `date +"%Y-%m-%d %H:%M:%S"` ...waiting for Elasticsearch to be ready
                      sleep 1
                    done

                    curl -X PUT "$HOSTNAME:9200/_cluster/settings" -H 'Content-Type: application/json' -d '@-' << EOF
                    {
                      "persistent": {
                        "search": {
                          "allow_expensive_queries": true
                        }
                      }
                    }
                    EOF

                    add_datastream_template() {
                      TEMPLATE_NAME=$1
                      POLICY=$2
                      ROLLOVER=$3
                      PRIORITY=$4
                      PATTERNS=$5
                      COMPOSITION=$6
                      curl -d "@-" -X PUT -H "Content-Type: application/json" "$HOSTNAME:9200/_index_template/$TEMPLATE_NAME" << EOF
                      {
                        "data_stream": {},
                        "template": {
                          "settings": {
                            "number_of_shards": 1,
                            "number_of_replicas": 0,
                            "index": {
                              "lifecycle": {
                                "name": "$POLICY",
                                "rollover_alias": "$ROLLOVER"
                              }
                            }
                          },
                          "mappings": {
                            "dynamic_templates": [
                              {
                                "geoip":{
                                  "path_match":"geoip.location",
                                  "mapping":{
                                    "type":"geo_point"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "priority": $PRIORITY,
                        "index_patterns": [
                          $PATTERNS
                        ],
                        "composed_of": [
                          $COMPOSITION
                        ]
                      }
                    EOF
                    }

                    curl -d "@-" -X PUT -H "Content-Type: application/json" "$HOSTNAME:9200/_ilm/policy/datastream" << EOF
                    {
                      "policy": {
                        "phases": {
                          "hot": {
                            "actions": {
                              "rollover": {
                                "max_size":"1gb"
                              }
                            }
                          }
                        }
                      }
                    }
                    EOF

                    add_datastream_template k8s datastream k8s 0 '"k8s*"'
                    add_datastream_template k8s-ingress-nginx datastream k8s-ingress-nginx 100 '"k8s-ingress-nginx*"'
                    add_datastream_template metricbeat datastream metricbeat 0 '"metricbeat*"' '"metricbeat"' || true # Requires bt-metricbeat helm chart for component template
          # resources:
          #   limits:
          #     cpu: 500m
          #     memory: 4Gi
          env:
            - name: ES_JAVA_OPTS
              value: -Xms1g -Xmx1g
          #   - name: ELASTICSEARCH_USERNAME
          #     valueFrom:
          #       secretKeyRef:
          #         name: general-secrets
          #         key: ELASTICSEARCH_USERNAME
          #   - name: ELASTICSEARCH_USERNAME
          #     valueFrom:
          #       secretKeyRef:
          #         name: general-secrets
          #         key: ELASTICSEARCH_USERNAME

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bt-elasticsearch-config
  labels:
    component: bt-elasticsearch
data:
  elasticsearch.yml: |
    cluster.name: bt-elasticsearch
    node.name: bt-elasticsearch
    path.data: /usr/share/elasticsearch/data
    http:
      host: 0.0.0.0
      port: 9200
    bootstrap.memory_lock: true
    discovery.type: single-node
    transport.host: 127.0.0.1
    indices:
      lifecycle:
        poll_interval: 1m
