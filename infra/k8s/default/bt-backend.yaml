apiVersion: v1
kind: Service
metadata:
  labels:
    appName: bt-backend-svc-$CI_ENVIRONMENT_NAME
  name: bt-backend-svc-$CI_ENVIRONMENT_NAME
  namespace: default
spec:
  ports:
    - name: http-bt-port
      port: 80
      protocol: TCP
      targetPort: 5000
  selector:
    appName: bt-backend-$CI_ENVIRONMENT_NAME
  type: ClusterIP

---
apiVersion: v1
data:
  DATABASE_URL: $SECRET_DATABASE_URL
  REDIS_URL: $SECRET_REDIS_URL
kind: ConfigMap
metadata:
  name: bt-backend-config-$CI_ENVIRONMENT_NAME
  namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    appName: bt-backend-$CI_ENVIRONMENT_NAME
  name: bt-backend-$CI_ENVIRONMENT_NAME
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      appName: bt-backend-$CI_ENVIRONMENT_NAME
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "5000"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        appName: bt-backend-$CI_ENVIRONMENT_NAME
    spec:
      containers:
        - command:
            - /bin/sh
            - -c
            - >
              python3 /backend/manage.py runserver 0.0.0.0:5000;
          env:
            - name: PYTHONUNBUFFERED
              value: "0"
            - name: GET_HOSTS_FROM
              value: dns
            - name: ENVIRONMENT_NAME
              value: $CI_ENVIRONMENT_NAME
          envFrom:
            - configMapRef:
                name: bt-backend-config-$CI_ENVIRONMENT_NAME
            - secretRef:
                name: bt-backend-secrets-$CI_ENVIRONMENT_NAME
          image: $GCR_PATH_BACKEND:$CI_COMMIT_SHORT_SHA
          imagePullPolicy: Always
          name: bt-backend-$CI_ENVIRONMENT_NAME
          ports:
            - containerPort: 5000
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/google
              name: bt-backend-secrets-volume
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: bt-backend-secrets-volume
          secret:
            defaultMode: 420
            items:
              - key: google-tokens
                path: auth.json
            secretName: bt-backend-secrets-$CI_ENVIRONMENT_NAME

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: bt-backend-data-updater-$CI_ENVIRONMENT_NAME
  namespace: default
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - command:
                - ./update-data.sh
              env:
                - name: PYTHONUNBUFFERED
                  value: "0"
                - name: GET_HOSTS_FROM
                  value: dns
                - name: ENVIRONMENT_NAME
                  value: $CI_ENVIRONMENT_NAME
              envFrom:
                - configMapRef:
                    name: bt-backend-config-$CI_ENVIRONMENT_NAME
                - secretRef:
                    name: bt-backend-secrets-$CI_ENVIRONMENT_NAME
              image: $GCR_PATH_BACKEND:$CI_COMMIT_SHORT_SHA
              imagePullPolicy: Always
              name: bt-backend-data-updater-$CI_ENVIRONMENT_NAME
              volumeMounts:
                - mountPath: /etc/google
                  name: bt-backend-secrets-volume
                  readOnly: true
          restartPolicy: OnFailure
          volumes:
            - name: bt-backend-secrets-volume
              secret:
                defaultMode: 420
                items:
                  - key: google-tokens
                    path: auth.json
                secretName: bt-backend-secrets-$CI_ENVIRONMENT_NAME
  schedule: 0 9 * * *

---
apiVersion: v1
kind: Secret
metadata:
  name: bt-backend-secrets-$CI_ENVIRONMENT_NAME
  namespace: default
type: Opaque
stringData:
  google-tokens: |-
    $SECRET_GOOGLE_SERVICE_ACCOUNT_JSON
  GOOGLE_CLIENT_ID: $SECRET_GOOGLE_CLIENT_ID
  GOOGLE_CLIENT_SECRET: $SECRET_GOOGLE_CLIENT_SECRET
  GOOGLE_TOKEN_URI: https://accounts.google.com/o/oauth2/token
  GOOGLE_APPLICATION_CREDENTIALS: /etc/google/auth.json
  GOOGLE_EMAIL: $SECRET_GOOGLE_EMAIL
  GOOGLE_PASS: $SECRET_GOOGLE_PASS
  SENDGRID_USERNAME: $SECRET_SENDGRID_USERNAME
  SENDGRID_PASSWORD: $SECRET_SENDGRID_PASSWORD
  SIS_CLASS_APP_ID: $SECRET_SIS_CLASS_APP_ID
  SIS_CLASS_APP_KEY: $SECRET_SIS_CLASS_APP_KEY
  SIS_COURSE_APP_ID: $SECRET_SIS_COURSE_APP_ID
  SIS_COURSE_APP_KEY: $SECRET_SIS_COURSE_APP_KEY
