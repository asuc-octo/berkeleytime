apiVersion: v1
kind: Service
metadata:
  name: bt-gitlab
  labels:
    component: bt-gitlab
spec:
  type: ClusterIP
  selector:
    component: bt-gitlab
  ports:
    - name: bt-gitlab-http
      port: 80
      targetPort: 8181
    - name: bt-gitlab-ssh
      port: 2222
      targetPort: 22
    - name: bt-gitlab-mattermost
      port: 8065
      targetPort: 8065
    - name: bt-gitlab-registry
      port: 5050
      targetPort: 5050

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bt-gitlab
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5G

---
# Not best security practices, but allows GitLab Runner to execute any kubectl
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bt-gitlab
  labels:
    component: bt-gitlab
data:
  # GITLAB_BACKUP_EXPIRY: "604800"
  GITLAB_EXTERNAL_HOSTNAME: berkeleytime.com/git
  GITLAB_EXTERNAL_SCHEME: https
  # GITLAB_MATTERMOST_EXTERNAL_HOSTNAME: m.berkeleytime.com
  # GITLAB_MATTERMOST_EXTERNAL_SCHEME: https
  # GITLAB_REGISTRY_EXTERNAL_HOSTNAME: registry.berkeleytime.com
  # GITLAB_REGISTRY_EXTERNAL_SCHEME: https
  # POSTGRES_DB: gitlab
  # POSTGRES_DB_MATTERMOST: mattermost
  # POSTGRES_PORT_MATTERMOST: "5432"
  # POSTGRES_HOST: bt-psql-prod
  # POSTGRES_USER: bt
  # MATTERMOST_APP_UID: "2000"
  # REDIS_HOST: bt-redis-prod-master
  # REDIS_PORT: "6379"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bt-gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      component: bt-gitlab
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/interceptionMode: TPROXY
        traffic.sidecar.istio.io/includeInboundPorts: "22"
      labels:
        component: bt-gitlab
    spec:
      volumes:
        - name: bt-gitlab
          persistentVolumeClaim:
            claimName: bt-gitlab
        - name: bt-gitlab-license
          configMap:
            name: bt-gitlab-license
      initContainers:
        - name: init
          image: busybox
          volumeMounts:
            - name: bt-gitlab
              mountPath: /var/opt/gitlab
              subPath: gitlab-data
          command:
            - /bin/sh
            - -c
            - |
              mkdir -p /var/opt/gitlab/.ssh
              mkdir -p /var/opt/gitlab/git-data/repositories
      containers:
        - name: bt-gitlab
          image: gitlab/gitlab-ee:13.12.4-ee.0
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - gitlab-ctl stop
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    update-permissions
                    chmod -R 400 /etc/gitlab/
                    sed -i 's/|| STARTER_PLAN/|| ULTIMATE_PLAN/g' /opt/gitlab/embedded/service/gitlab-rails/ee/app/models/license.rb
          livenessProbe:
            exec:
              command:
                - curl
                - localhost:8181/git
            failureThreshold: 5
            initialDelaySeconds: 1200
            periodSeconds: 300
            timeoutSeconds: 5
          volumeMounts:
            - name: bt-gitlab
              mountPath: /etc/gitlab
              subPath: gitlab-config
            - name: bt-gitlab
              mountPath: /var/opt/gitlab
              subPath: gitlab-data
            - name: bt-gitlab
              mountPath: /var/log/gitlab
              subPath: gitlab-logs
            - name: bt-gitlab-license
              mountPath: /opt/gitlab/embedded/service/gitlab-rails/.license_encryption_key.pub
              subPath: license_encryption_key_pub
          envFrom:
            - configMapRef:
                name: bt-gitlab
          env:
            - name: POSTGRES_PASSWORD
              value: NOT_IN_USE
            - name: MATTERMOST_APP_SECRET
              value: NOT_IN_USE
            - name: GITLAB_ROOT_EMAIL
              value: root@berkeleytime.com
            - name: GITLAB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: general-secrets
                  key: PASSWORD_BT_GITLAB_GITLAB_ROOT_PASSWORD
            - name: GITLAB_SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: general-secrets
                  key: USERNAME_BT_GITLAB_SENDGRID_SMTP
            - name: GITLAB_SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: general-secrets
                  key: PASSWORD_BT_GITLAB_SENDGRID_SMTP
            - name: GITLAB_OMNIBUS_CONFIG
              value: |
                alertmanager['enable'] = false
                consul['enable'] = false
                geo_postgresql['enable'] = false
                gitaly['enable'] = true
                gitlab_exporter['enable'] = false
                gitlab_pages['enable'] = false
                # gitlab_rails['incoming_email_enabled'] = true
                gitlab_workhorse['enable'] = true
                grafana['enable'] = false
                letsencrypt['enable'] = nil
                logrotate['enable'] = true
                manage_accounts['enable'] = true
                manage_storage_directories['enable'] = false
                mattermost_nginx['enable'] = false
                mattermost['enable'] = false
                monitoring_role['enable'] = false
                nginx['enable'] = false
                node_exporter['enable'] = false
                pages_nginx['enable'] = false
                patroni['enable'] = false
                pgbouncer_exporter['enable'] = false
                pgbouncer['enable'] = false
                postgres_exporter['enable'] = false
                postgresql['enable'] = true
                praefect['enable'] = false
                prometheus_monitoring['enable'] = false
                prometheus['enable'] = false
                puma['enable'] = true
                puma['exporter_enabled'] = false
                redis_exporter['enable'] = false
                redis_master_role['enable'] = true
                redis_replica_role['enable'] = false
                redis_sentinel_role['enable'] = false
                redis['enable'] = true
                registry_nginx['enable'] = false
                registry['enable'] = false # Docker registry
                repmgr['enable'] = false
                repmgrd['enable'] = false
                sentinel['enable'] = false
                sentinel['enable'] = false
                storage_check['enable'] = false
                unicorn['enable'] = false

                external_url "#{ENV['GITLAB_EXTERNAL_SCHEME']}://#{ENV['GITLAB_EXTERNAL_HOSTNAME']}"
                nginx['real_ip_trusted_addresses'] = [ 'nlb.default.svc.cluster.local' ]
                nginx['real_ip_header'] = 'X-Forwarded-For'
                nginx['real_ip_recursive'] = 'on'
                web_server['external_users'] = ['www-data']
                gitlab_rails['trusted_proxies'] = [ 'nlb.default.svc.cluster.local', '10.244.0.0/24' ]
                gitlab_rails['time_zone'] = 'America/Los_Angeles'
                gitlab_workhorse['listen_network'] = "tcp"
                gitlab_workhorse['listen_addr'] = "0.0.0.0:8181"
                gitlab_rails['gitlab_shell_ssh_port'] = 2222
                postgresql['shared_buffers'] = '128MB'

                # Sidekiq, required for emails and other stuff to work
                sidekiq['enable'] = true
                sidekiq['cluster'] = true
                # sidekiq['concurrency'] = 25 # Single-process sidekiq only
                sidekiq['experimental_queue_selector'] = false
                sidekiq['interval'] = nil
                sidekiq['log_directory'] = "/var/log/gitlab/sidekiq"
                sidekiq['log_format'] = "json"
                sidekiq['max_concurrency'] = 25
                sidekiq['min_concurrency'] = 15
                sidekiq['shutdown_timeout'] = 4
                sidekiq['queue_groups'] = ["*"]
                # sidekiq['queue_groups'] = [
                #   "elastic_indexer",
                #   "mailers",
                #   "*"
                # ]
                sidekiq['negate'] = false
                sidekiq['metrics_enabled'] = true
                sidekiq['listen_address'] = "localhost"
                sidekiq['listen_port'] = 8082

                # Optimizing Git
                puma['worker_processes'] = 0
                puma['min_threads'] = 1
                puma['max_threads'] = 4
                puma['per_worker_max_memory_mb'] = 850

                # Email Settings
                gitlab_ci['gitlab_ci_email_from'] = 'noreply@berkeleytime.com'
                gitlab_ci['smtp_address'] = "smtp.sendgrid.net"
                gitlab_ci['smtp_authentication'] = "login"
                gitlab_ci['smtp_domain'] = "smtp.sendgrid.net"
                gitlab_ci['smtp_enable_starttls_auto'] = true
                gitlab_ci['smtp_enable'] = true
                gitlab_ci['smtp_password'] = ENV['GITLAB_SMTP_PASSWORD']
                gitlab_ci['smtp_port'] = 587
                gitlab_ci['smtp_tls'] = false
                gitlab_ci['smtp_user_name'] = ENV['GITLAB_SMTP_USERNAME']
                gitlab_rails['gitlab_email_display_name'] = 'Berkeleytime GitLab'
                gitlab_rails['gitlab_email_enabled'] = true
                gitlab_rails['gitlab_email_from'] = 'noreply@berkeleytime.com'
                gitlab_rails['gitlab_email_reply_to'] = 'noreply@berkeleytime.com'
                gitlab_rails['smtp_address'] = "smtp.sendgrid.net"
                gitlab_rails['smtp_authentication'] = "login"
                gitlab_rails['smtp_domain'] = "smtp.sendgrid.net"
                gitlab_rails['smtp_enable_starttls_auto'] = true
                gitlab_rails['smtp_enable'] = true
                gitlab_rails['smtp_force_ssl'] = false
                gitlab_rails['smtp_password'] = ENV['GITLAB_SMTP_PASSWORD']
                gitlab_rails['smtp_port'] = 587
                gitlab_rails['smtp_ssl'] = false
                gitlab_rails['smtp_tls'] = false
                gitlab_rails['smtp_user_name'] = ENV['GITLAB_SMTP_USERNAME']

                # Docker registry
                # registry_external_url 'url'

                # Raspberry Pi optimization
                # https://docs.gitlab.com/omnibus/settings/rpi.html
                # puma['worker_processes'] = 7
                # sidekiq['concurrency'] = 9

                # prometheus['listen_address'] = '0.0.0.0:9090'
                # postgres_exporter['env'] = {
                #   'DATA_SOURCE_NAME' => "user=#{ENV['POSTGRES_USER']} host=#{ENV['POSTGRES_HOST']} port=#{ENV['POSTGRES_PORT_MATTERMOST']} dbname=#{ENV['POSTGRES_DB_MATTERMOST']} password=#{ENV['POSTGRES_PASSWORD']} sslmode=disable"
                # }
                # redis_exporter['flags'] = {
                #   'redis.addr' => "#{ENV['REDIS_HOST']}:#{ENV['REDIS_PORT']}",
                # }
                # gitlab_rails['db_database'] = ENV['POSTGRES_DB']
                # gitlab_rails['db_host'] = ENV['POSTGRES_HOST']
                # gitlab_rails['db_password'] = ENV['POSTGRES_PASSWORD']
                # gitlab_rails['db_username'] = ENV['POSTGRES_USER']
                # gitlab_rails['redis_host'] = ENV['REDIS_HOST']
                # registry_external_url "#{ENV['GITLAB_REGISTRY_EXTERNAL_SCHEME']}://#{ENV['GITLAB_REGISTRY_EXTERNAL_HOSTNAME']}"
                # mattermost_external_url "#{ENV['GITLAB_MATTERMOST_EXTERNAL_SCHEME']}://#{ENV['GITLAB_MATTERMOST_EXTERNAL_HOSTNAME']}"
                # mattermost['service_address'] = '0.0.0.0'
                # mattermost['service_port'] = '8065'
                # registry['registry_http_addr'] = '0.0.0.0:5050'
                # mattermost['file_directory'] = '/gitlab-data/mattermost'
                # mattermost['sql_driver_name'] = 'postgres'
                # mattermost['sql_data_source'] = "user=#{ENV['POSTGRES_USER']} host=#{ENV['POSTGRES_HOST']} port=#{ENV['POSTGRES_PORT_MATTERMOST']} dbname=#{ENV['POSTGRES_DB_MATTERMOST']} password=#{ENV['POSTGRES_PASSWORD']} sslmode=disable"
                # mattermost['gitlab_secret'] = ENV['MATTERMOST_APP_SECRET']
                # mattermost['gitlab_id'] = ENV['MATTERMOST_APP_UID']
                # mattermost['gitlab_scope'] = ''
                # mattermost['gitlab_auth_endpoint'] = "#{ENV['GITLAB_EXTERNAL_SCHEME']}://#{ENV['GITLAB_EXTERNAL_HOSTNAME']}/oauth/authorize"
                # mattermost['gitlab_token_endpoint'] = "#{ENV['GITLAB_EXTERNAL_SCHEME']}://#{ENV['GITLAB_EXTERNAL_HOSTNAME']}/oauth/token"
                # mattermost['gitlab_user_api_endpoint'] = "#{ENV['GITLAB_EXTERNAL_SCHEME']}://#{ENV['GITLAB_EXTERNAL_HOSTNAME']}/api/v3/user"
                # gitlab_shell['auth_file'] = '/gitlab-data/ssh/authorized_keys'
                # git_data_dir '/gitlab-data/git-data'
                # gitlab_rails['initial_license_file'] = "/etc/gitlab/Gitlab.gitlab-license"
                # gitlab_rails['shared_path'] = '/gitlab-data/shared'
                # gitlab_rails['uploads_directory'] = '/gitlab-data/uploads'
                # gitlab_ci['builds_directory'] = '/gitlab-data/builds'
                # gitlab_rails['registry_path'] = '/gitlab-registry'
                # gitlab_rails['trusted_proxies'] = ["10.0.0.0/8","172.16.0.0/12","192.168.0.0/16"]

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bt-gitlab-license
  labels:
    component: bt-gitlab
data:
  license_encryption_key_pub: |
    -----BEGIN PUBLIC KEY-----
    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqR8SclLmCUXgnC2fjndj
    94Y/KMTnB+xc4UVGXy+26xHP6lhTsnUMVcpPyZkB877bQv7SXrFYC5MOwb+j53Nr
    DgBcx+ikllUjEf1i7nFV+CRq6Ht0p8cdquTmANHw4Jv5hR9jUdPoNdrA0217wm+H
    Rcz7r99Kx+n8UoFw5l6CQeYUzusV2kA70Sp2VkaAk1ZgA4CW7YcMZEvNH19NtWr7
    ex1PBYcqn81KVkBovYeE5UnhN2cdgWC7VsLFNrCBesjkkcuZgiCWpABIV5nfsIma
    I1m95IJm20irOtgWH0PIYJnZl2HCgLRbrv4bqb+ENK6USnYHOBAqP9G6nE0G3PFh
    gQIDAQAB
    -----END PUBLIC KEY-----
