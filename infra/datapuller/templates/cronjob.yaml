{{- define "bt-datapuller.cronjob" -}}
{{- $root := index . 0 -}}
{{- $jobName := index . 1 -}}
{{- $jobConfig := index . 2 -}}
{{- if not (eq $root.Values.env "dev") }}
# Do not run CronJob in dev environment
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "bt-datapuller.datapullerName" $root }}-{{ $jobName }}
  labels:
    {{- include "bt-datapuller.datapullerLabels" $root | nindent 4 }}
spec:
  schedule: "{{ $jobConfig.schedule }}"
  suspend: {{ $jobConfig.suspend }}
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: datapuller-{{ $jobName }}
              image: "{{ $jobConfig.image.registry }}/{{ $jobConfig.image.repository }}:{{ $jobConfig.image.tag }}"
              imagePullPolicy: Always
              command: {{ $jobConfig.command | toJson }}
              env:
                - name: NODE_ENV
                  value: {{ $root.Values.nodeEnv }}
                - name: MONGODB_URI
                  value: {{ $root.Values.mongoUri }}
                - name: REDIS_URI
                  value: {{ $root.Values.redisUri }}
                - name: SIS_CLASS_APP_ID
                  value: "_"
                - name: SIS_CLASS_APP_KEY
                  value: "_"
                - name: SIS_COURSE_APP_ID
                  value: "_"
                - name: SIS_COURSE_APP_KEY
                  value: "_"
                - name: SIS_TERM_APP_ID
                  value: "_"
                - name: SIS_TERM_APP_KEY
                  value: "_"
                - name: GOOGLE_CLIENT_ID
                  value: "_"
                - name: GOOGLE_CLIENT_SECRET
                  value: "_"
                - name: SESSION_SECRET
                  value: "_"
          restartPolicy: OnFailure
{{- end }}{{- end -}}
