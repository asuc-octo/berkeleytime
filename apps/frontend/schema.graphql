directive @cacheControl(
  maxAge: Int
  scope: CacheControlScope
  inheritMaxAge: Boolean
) on FIELD_DEFINITION | OBJECT | INTERFACE | UNION

directive @auth on OBJECT | FIELD_DEFINITION

"""
Indicates exactly one field must be supplied and this field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

type User {
  email: String!
  student: Boolean!
  bookmarkedCourses: [Course!]!
  bookmarkedClasses: [Class!]!
}

type Query {
  user: User
  grade(
    subject: String!
    courseNumber: CourseNumber!
    classNumber: ClassNumber
    year: Int
    semester: Semester
    givenName: String
    familyName: String
  ): GradeDistribution!
  catalog(year: Int!, semester: Semester!, query: String): [Class!]!
  ping: String! @deprecated(reason: "test")
  schedules: [Schedule]
  schedule(id: ID!): Schedule

  """
  Query for terms.
  """
  terms: [Term]

  """
  Query for a term.
  """
  term(year: Int!, semester: Semester!): Term
  course(subject: String!, number: CourseNumber!): Course
  courses: [Course!]!
  class(
    year: Int!
    semester: Semester!
    subject: String!
    courseNumber: CourseNumber!
    number: ClassNumber!
  ): Class
  section(
    year: Int!
    semester: Semester!
    subject: String!
    courseNumber: CourseNumber!
    classNumber: ClassNumber!
    number: SectionNumber!
  ): Section
  enrollment(
    year: Int!
    semester: Semester!
    subject: String!
    courseNumber: CourseNumber!
    number: SectionNumber!
  ): Section!
}

input BookmarkedCourseInput {
  subject: String!
  number: CourseNumber!
}

input BookmarkedClassInput {
  year: Int!
  semester: Semester!
  subject: String!
  courseNumber: CourseNumber!
  number: ClassNumber!
}

input UpdateUserInput {
  bookmarkedClasses: [BookmarkedClassInput!]
  bookmarkedCourses: [BookmarkedCourseInput!]
}

type Mutation {
  updateUser(user: UpdateUserInput!): User
  deleteSchedule(id: ID!): ID
  createSchedule(schedule: CreateScheduleInput!): Schedule
  updateSchedule(id: ID!, schedule: UpdateScheduleInput!): Schedule
}

type GradeDistribution {
  average: Float
  distribution: [Grade!]!
  pnpPercentage: Float
}

type Grade {
  letter: String!
  percentage: Float!
  count: Int!
}

enum CacheControlScope {
  PUBLIC
  PRIVATE
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

"""
ISODate custom scalar type
"""
scalar ISODate

"""
The combination of year and season that corresponds to a specific term. Both year and season/semester are required.
"""
input TermInput {
  year: Int!
  semester: Semester!
}

enum Semester {
  Summer
  Fall
  Spring
  Winter
}

type SelectedClass {
  class: Class!
  selectedSections: [SectionIdentifier!]
}

type Event {
  startTime: String!
  endTime: String!
  days: [Boolean!]!
  location: String
  title: String!
  description: String
}

type Schedule {
  _id: ID!
  name: String!
  createdBy: String!
  year: Int!
  semester: Semester!
  term: Term!
  public: Boolean!
  classes: [SelectedClass!]!
  events: [Event!]!
}

input EventInput {
  startTime: String!
  endTime: String!
  days: [Boolean!]!
  location: String
  title: String!
  description: String
}

input SelectedClassInput {
  subject: String!
  courseNumber: CourseNumber!
  number: ClassNumber!
  sectionIds: [SectionIdentifier!]!
}

input UpdateScheduleInput {
  name: String
  events: [EventInput]
  classes: [SelectedClassInput]
  public: Boolean
}

input CreateScheduleInput {
  name: String!
  year: Int!
  semester: Semester!
  events: [EventInput!]
  classes: [SelectedClassInput!]
  public: Boolean
}

enum TemporalPosition {
  Past
  Current
  Future
}

"""
Session
"""
type Session {
  temporalPosition: TemporalPosition!
  name: String!
  startDate: String
  endDate: String
}

"""
Term
"""
type Term {
  semester: Semester!
  year: Int!
  temporalPosition: TemporalPosition!
  startDate: String!
  endDate: String!
  sessions: [Session!]!
}

"""
Unique course number, such as 61A or C54
"""
scalar CourseNumber

type Course {
  """
  Identifiers
  """
  subject: String!
  number: CourseNumber!

  """
  Relationships
  """
  classes: [Class!]!
  crossListing: [Course!]!
  requiredCourses: [Course!]!

  """
  Attributes
  """
  requirements: String
  description: String!
  fromDate: String!
  gradeDistribution: GradeDistribution!
  gradingBasis: CourseGradingBasis!
  finalExam: CourseFinalExam
  academicCareer: AcademicCareer!
  title: String!
  primaryInstructionMethod: InstructionMethod!
  toDate: String!
  typicallyOffered: [String!]
}

enum CourseGradingBasis {
  completedNotation
  passFail
  letter
  satisfactory
  graded
}

enum CourseFinalExam {
  """
  To be decided by the instructor when the class is offered
  """
  D

  """
  No final exam
  """
  N

  """
  Alternative method of final assessment
  """
  A

  """
  Common Final Exam
  """
  C

  """
  Written final exam conducted during the scheduled final exam period
  """
  Y
}

enum AcademicCareer {
  """
  Undergraduate
  """
  UGRD

  """
  Graduate
  """
  GRAD

  """
  UC Extension
  """
  UCBX
}

enum InstructionMethod {
  """
  Unknown
  """
  UNK

  """
  Demonstration
  """
  DEM

  """
  Conversation
  """
  CON

  """
  Workshop
  """
  WOR

  """
  Web-Based Discussion
  """
  WBD

  """
  Clinic
  """
  CLC

  """
  Directed Group Study
  """
  GRP

  """
  Discussion
  """
  DIS

  """
  Tutorial
  """
  TUT

  """
  Field Work
  """
  FLD

  """
  Lecture
  """
  LEC

  """
  Laboratory
  """
  LAB

  """
  Session
  """
  SES

  """
  Studio
  """
  STD

  """
  Self-paced
  """
  SLF

  """
  Colloquium
  """
  COL

  """
  Web-Based Lecture
  """
  WBL

  """
  Independent Study
  """
  IND

  """
  Internship
  """
  INT

  """
  Reading
  """
  REA

  """
  Recitation
  """
  REC

  """
  Seminar
  """
  SEM
}

"""
Unique class number (primary section number), such as 001 or 003
"""
scalar ClassNumber

type Class {
  """
  Identifiers
  """
  subject: String!
  courseNumber: CourseNumber!
  number: ClassNumber!
  year: Int!
  semester: Semester!
  session: String!

  """
  Relationships
  """
  course: Course!
  primarySection: Section!
  sections: [Section!]!
  term: Term!
  gradeDistribution: GradeDistribution!

  """
  Attributes
  """
  gradingBasis: ClassGradingBasis!
  finalExam: ClassFinalExam!
  description: String
  title: String
  unitsMax: Float!
  unitsMin: Float!
}

enum ClassFinalExam {
  """
  Yes
  """
  Y

  """
  No
  """
  N

  """
  Alernate Method
  """
  A

  """
  Common Final
  """
  C

  """
  Last Class Meeting
  """
  L
}

enum ClassGradingBasis {
  """
  Elective Satisfactory/Unsat
  """
  ESU

  """
  Satisfactory/Unsatisfactory
  """
  SUS

  """
  Student Option
  """
  OPT

  """
  Pass/Not Pass
  """
  PNP

  """
  Multi-Term Course: Not Graded
  """
  BMT

  """
  Graded
  """
  GRD

  """
  Instructor Option
  """
  IOP
}

"""
Unique section number, such as 101, 105L, or 999
"""
scalar SectionNumber

"""
Unique 5-digit section identifier (CCN), such as 28082 or 67231
"""
scalar SectionIdentifier

type Section {
  """
  Identifiers
  """
  subject: String!
  courseNumber: CourseNumber!
  classNumber: ClassNumber!
  number: SectionNumber!
  year: Int!
  semester: Semester!
  ccn: SectionIdentifier!

  """
  Relationships
  """
  class: Class!
  course: Course!
  term: Term!

  """
  Attributes
  """
  session: String!
  primary: Boolean!
  enrollmentHistory: [EnrollmentDay!]
  component: Component!
  meetings: [Meeting!]!
  exams: [Exam!]!
  startDate: String!
  endDate: String!
  online: Boolean!
  open: Boolean!
  reservations: [Reservation!]
  enrollCount: Int!
  waitlistCount: Int!
  enrollMax: Int!
  waitlistMax: Int!
}

enum Component {
  """
  Workshop
  """
  WOR

  """
  Web-Based Discussion
  """
  WBD

  """
  Clinic
  """
  CLN

  """
  Practicum
  """
  PRA

  """
  Directed Group Study
  """
  GRP

  """
  Discussion
  """
  DIS

  """
  Voluntary
  """
  VOL

  """
  Tutorial
  """
  TUT

  """
  Field Work
  """
  FLD

  """
  Lecture
  """
  LEC

  """
  Supplementary
  """
  SUP

  """
  Laboratory
  """
  LAB

  """
  Session
  """
  SES

  """
  Studio
  """
  STD

  """
  Self-paced
  """
  SLF

  """
  Colloquium
  """
  COL

  """
  Web-Based Lecture
  """
  WBL

  """
  Independent Study
  """
  IND

  """
  Internship
  """
  INT

  """
  Reading
  """
  REA

  """
  Recitation
  """
  REC

  """
  Seminar
  """
  SEM

  """
  Demonstration
  """
  DEM
}

type Reservation {
  enrollCount: Int!
  enrollMax: Int!
  group: String!
}

type Meeting {
  days: [Boolean!]
  startTime: String!
  endTime: String!
  startDate: String!
  endDate: String!
  location: String
  instructors: [Instructor!]!
}

type Exam {
  date: String!
  startTime: String!
  endTime: String!
  location: String!
  final: Boolean!
}

type Instructor {
  familyName: String
  givenName: String
}

type EnrollmentDay {
  enrollCount: Int!
  enrollMax: Int!
  waitlistCount: Int!
  waitlistMax: Int!
}
