---
networks:
  bt:
    name: bt
services:
  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
      target: backend-dev
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - bt
    restart: always
    volumes:
      - ./.env:/backend/apps/backend/.env
      - ./apps/backend:/backend/apps/backend
      - ./packages:/backend/packages
  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
      target: frontend-dev
    environment:
      - VITE_OTEL_SERVICE_NAME=frontend
      - VITE_OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318/v1/traces
    networks:
      - bt
    restart: always
    volumes:
      - ./apps/frontend:/frontend/apps/frontend
      - ./packages:/frontend/packages
  ag-frontend:
    build:
      context: .
      dockerfile: ./apps/ag-frontend/Dockerfile
      target: ag-frontend-dev
    networks:
      - bt
    restart: always
    volumes:
      - ./apps/ag-frontend:/ag-frontend/apps/ag-frontend
      - ./packages:/ag-frontend/packages
  mongodb:
    image: mongo:7.0.5
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    networks:
      - bt
    ports:
      - 27017:27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongodb:27017',priority:1}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - ./data/mongodb/db:/data/db
      - ./data/mongodb/configdb:/data/configdb
  nginx:
    depends_on:
      - backend
      - frontend
      - ag-frontend
    image: nginx:1.21
    networks:
      - bt
    ports:
      - 8080:8080
      - 8081:8081
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
  redis:
    image: redis:7.2.4
    ports:
      - 6379:6379
    networks:
      - bt
    restart: always
  storybook:
    build:
      context: .
      dockerfile: ./apps/storybook/Dockerfile
      target: storybook-dev
    ports:
      - 6006:6006
    networks:
      - bt
    restart: always
    volumes:
      - ./packages/theme:/storybook/packages/theme
      - ./apps/storybook:/storybook/apps/storybook
  # docs:
  #   build:
  #     context: .
  #     dockerfile: ./apps/docs/Dockerfile
  #     target: docs-dev
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - bt
  #   restart: always
  #   volumes:
  #     - ./apps/docs:/storybook/apps/docs
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.126.0
    command: ["--config=/etc/otel/collector/config.yaml"]
    networks:
      - bt
    ports:
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP HTTP receiver
      - 9464:9464 # Prometheus metrics exporter
      - 55679:55679 # zpages extension
    restart: always
    volumes:
      - ./otel-collector.yaml:/etc/otel/collector/config.yaml
