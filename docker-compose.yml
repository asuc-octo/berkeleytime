---
networks:
  bt:
    name: bt
services:
  # datapuller:
  #   build:
  #     context: .
  #     target: datapuller-dev
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - bt
  #   restart: always
  #   volumes:
  #     - ./apps/datapuller/src:/datapuller/apps/datapuller/src
  #     - ./.env:/datapuller/apps/datapuller/.env
  backend:
    build:
      context: .
      target: backend-dev
    depends_on:
      - redis
      - mongodb
    networks:
      - bt
    restart: always
    volumes:
      - ./.env:/backend/apps/backend/.env
      - ./apps/backend/src:/backend/apps/backend/src
  frontend:
    build:
      context: .
      target: frontend-dev
    networks:
      - bt
    restart: always
    volumes:
      - ./apps/frontend/src:/frontend/apps/frontend/src
      - ./packages/theme/src:/frontend/packages/theme/src
      - ./apps/frontend/public:/frontend/apps/frontend/public
  mongodb:
    image: mongo:5
    command: ["--replSet", "rs0", "--bind_ip_all"]
    networks:
      - bt
    ports:
      - 27017:27017
    restart: always
    volumes:
      - ./db:/data/db
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo --quiet) -eq 1
      interval: 10s
      start_period: 30s
  nginx:
    depends_on:
      - backend
      - frontend
    image: nginx:1.21
    networks:
      - bt
    ports:
      - 8080:8080
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
  redis:
    image: redis:6
    ports:
      - 6379:6379
    restart: always
    networks:
      - bt
