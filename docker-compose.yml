---
networks:
  bt:
    name: bt
services:
  # datapuller:
  #   build:
  #     context: .
  #     target: datapuller-dev
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - bt
  #   restart: always
  #   volumes:
  #     - ./apps/datapuller/src:/datapuller/apps/datapuller/src
  #     - ./.env:/datapuller/apps/datapuller/.env
  backend:
    build:
      context: .
      target: backend-dev
    depends_on:
      - redis
      - mongo1
      # - mongo2
      # - mongo3
    networks:
      - bt
    restart: always
    volumes:
      - ./.env:/backend/apps/backend/.env
      - ./apps/backend/src:/backend/apps/backend/src
  frontend:
    build:
      context: .
      target: frontend-dev
    networks:
      - bt
    restart: always
    volumes:
      - ./apps/frontend/src:/frontend/apps/frontend/src
      - ./packages/theme/src:/frontend/packages/theme/src
      - ./apps/frontend/public:/frontend/apps/frontend/public
  mongo1:
    image: mongo:7
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    healthcheck:
      # test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo1:27017',priority:1},{_id:1,host:'mongo2:27018',priority:0.5},{_id:2,host:'mongo3:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo1:27017',priority:1}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - ./data/mongo1/db:/data/db
      - ./data/mongo1/configdb:/data/configdb
    networks:
      - bt
  # mongo2:
  #   image: mongo:7
  #   command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
  #   ports:
  #     - 27018:27018
  #   volumes:
  #     - ./data/mongo2/db:/data/db
  #     - ./data/mongo2/configdb:/data/configdb
  #   networks:
  #     - bt
  # mongo3:
  #   image: mongo:7
  #   command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
  #   ports:
  #     - 27019:27019
  #   volumes:
  #     - ./data/mongo3/db:/data/db
  #     - ./data/mongo3/configdb:/data/configdb
  #   networks:
  #     - bt
  nginx:
    depends_on:
      - backend
      - frontend
    image: nginx:1.21
    networks:
      - bt
    ports:
      - 8080:8080
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
  redis:
    image: redis:6
    ports:
      - 6379:6379
    restart: always
    networks:
      - bt
