image: gcr.io/berkeleytime-218606/gitlab-runner:latest # infra/docker/gitlab-runner/Dockerfile
variables:
  FILEPATH_DEPLOY_BACKEND: infra/k8s/default/bt-backend.yaml
  FILEPATH_DEPLOY_FRONTEND: infra/k8s/default/bt-frontend.yaml
  FILEPATH_LOCAL_DOCKER_COMPOSE_BACKEND: backend
  FILEPATH_LOCAL_DOCKER_COMPOSE_FRONTEND: frontend
  GCR_PATH_BACKEND: gcr.io/berkeleytime-218606/bt-backend
  GCR_PATH_FRONTEND: gcr.io/berkeleytime-218606/bt-frontend
  PROJECT_ID: berkeleytime-218606
  MONITORED_BRANCH: ocf
  CI_COMMIT_BEFORE_SHA_SHORT: ${CI_COMMIT_BEFORE_SHA}

stages:
  - build
  - deploy-staging
  - deploy-prod

.before_build:
  only:
    refs:
      - $MONITORED_BRANCH
  before_script:
    - gcloud config set builds/use_kaniko True
    - gcloud auth activate-service-account --key-file $SECRET_GOOGLE_SERVICE_ACCOUNT_JSON

.before_deploy:
  before_script:
    - SECRET_GOOGLE_SERVICE_ACCOUNT_JSON=$(cat $SECRET_GOOGLE_SERVICE_ACCOUNT_JSON) # We put credentials into a variable that goes to /etc/google/auth.json in back-end container
    - envsubst < $FILEPATH_DEPLOY_BACKEND | kubectl apply -f - --kubeconfig $SECRET_KUBERNETES_CREDENTIALS
    - envsubst < $FILEPATH_DEPLOY_FRONTEND | kubectl apply -f - --kubeconfig $SECRET_KUBERNETES_CREDENTIALS

build-backend:
  stage: build
  extends: .before_build
  script:
    - >
      if [ -z "$(gcloud container images list-tags $GCR_PATH_BACKEND --filter tags~"$CI_COMMIT_SHORT_SHA")" ]; then
        gcloud builds submit $FILEPATH_LOCAL_DOCKER_COMPOSE_BACKEND --tag ${GCR_PATH_BACKEND}:${CI_COMMIT_SHORT_SHA} --project $PROJECT_ID
        gcloud container images add-tag ${GCR_PATH_BACKEND}:${CI_COMMIT_SHORT_SHA} ${GCR_PATH_BACKEND}:latest --project $PROJECT_ID
      else
        echo "Docker image of this commit already exists: ${GCR_PATH_BACKEND}:${CI_COMMIT_SHORT_SHA}"
      fi

build-frontend:
  stage: build
  extends: .before_build
  script:
    - >
      if [ -z "$(gcloud container images list-tags $GCR_PATH_FRONTEND --filter tags~"$CI_COMMIT_SHORT_SHA")" ]; then
        gcloud builds submit $FILEPATH_LOCAL_DOCKER_COMPOSE_FRONTEND --tag ${GCR_PATH_FRONTEND}:${CI_COMMIT_SHORT_SHA} --project $PROJECT_ID
        gcloud container images add-tag ${GCR_PATH_FRONTEND}:${CI_COMMIT_SHORT_SHA} ${GCR_PATH_FRONTEND}:latest --project $PROJECT_ID
      else
        echo "Docker image of this commit already exists: ${GCR_PATH_FRONTEND}:${CI_COMMIT_SHORT_SHA}"
      fi

deploy-staging:
  stage: deploy-staging
  extends: .before_deploy
  environment:
    name: staging
  script:
    - echo deployed bt-${CI_ENVIRONMENT_NAME}

deploy-prod:
  stage: deploy-prod
  extends: .before_deploy
  environment:
    name: prod
  when: manual
  script:
    - echo deployed bt-${CI_ENVIRONMENT_NAME}
